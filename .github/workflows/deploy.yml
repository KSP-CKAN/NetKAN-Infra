name: Deploy NetKAN-Infra

on:
  push:
    branches:
      - master

jobs:
  build:
    if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_PASSWORD }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push NetKAN-infra
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: netkan/.
          push: true
          target: production
          tags: kspckan/netkan:latest
  webhooks:
    if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_PASSWORD }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push webhooks-proxy
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: kspckan/webhooks-proxy:latest

  deploy:
    if: ${{ env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY }}
    runs-on: ubuntu-latest
    needs: [ 'build', 'webhooks' ]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        pip install netkan/.
    - name: Re-deploy Containers
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        netkan redeploy-service --cluster NetKANCluster --service-name Indexer
        netkan redeploy-service --cluster NetKANCluster --service-name Webhooks
        netkan redeploy-service --cluster NetKANCluster --service-name Adder
        netkan redeploy-service --cluster NetKANCluster --service-name Mirrorer
