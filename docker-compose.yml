version: '3.4'

volumes:
  certbot:

services:
  indexer:
    build:
      context: netkan/.
      target: dev
    environment:
      SSH_KEY: ${CKAN_NETKAN_SSHKEY}
      CKANMETA_REMOTE: ${CKAN_METADATA_PATH}
      CKANMETA_USER: ${CKAN_METADATA_USER}
      CKANMETA_REPO: ${CKAN_METADATA_REPO}
      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
      GH_Token: ${CKAN_GH_Token}
      SQS_QUEUE: OutboundDev.fifo
      SQS_TIMEOUT: 30
      STATUS_DB: DevNetKANStatus
      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
    volumes:
      - ./netkan:/home/netkan/netkan
    command: indexer
  scheduler:
    build:
      context: netkan/.
      target: dev
    environment:
      NETKAN_REMOTE: ${NETKAN_METADATA_PATH}
      SSH_KEY: ${CKAN_NETKAN_SSHKEY}
      CKANMETA_REMOTE: ${CKAN_METADATA_PATH}
      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
      SQS_QUEUE: InboundDev.fifo
      MAX_QUEUED: 1
      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
    volumes:
      - ./netkan:/home/netkan/netkan
    command: scheduler --dev
  inflator:
    image: kspckan/inflator
    environment:
      QUEUES: InboundDev.fifo,OutboundDev.fifo
      GH_Token: ${CKAN_GH_Token}
      AWS_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
    volumes:
      # Docker will create this with root perms if
      # it's not created first. First user on most
      # distros is 1000:1000, which will match the
      # user in the container.
      - ${HOME}/ckan_cache:/home/netkan/ckan_cache
  legacyhooks:
    image: kspckan/webhooks
    environment:
      SSH_KEY: ${CKAN_NETKAN_SSHKEY}
      GH_Token: ${CKAN_GH_Token}
      XKAN_GHSECRET: test
      CKAN_meta: ${CKAN_METADATA_PATH}
      NetKAN: ${NETKAN_METADATA_PATH}
      IA_access: test
      IA_secret: test
      IA_collection: test
    volumes:
      - ${HOME}/ckan_cache:/home/netkan/ckan_cache
  webhooks:
    build:
      context: netkan/.
      target: dev
    environment:
      XKAN_GHSECRET: test
      SSH_KEY: ${CKAN_NETKAN_SSHKEY}
      NETKAN_REMOTE: ${NETKAN_METADATA_PATH}
      INFLATION_SQS_QUEUE: InboundDev.fifo
      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
    entrypoint: .local/bin/gunicorn
    command: -b 0.0.0.0:5000 --access-logfile - "netkan.webhooks:create_app()"
  status:
    build:
      context: netkan/.
      target: dev
    environment:
      STATUS_DB: DevNetKANStatus
      STATUS_BUCKET: ckan-test-status
      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
      STATUS_INTERVAL: 0
      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
    volumes:
      - ./netkan:/home/netkan/netkan
    command: export-status-s3
  certbot:
    image: certbot/dns-route53
    command: certonly -n --agree-tos --email ${CKAN_EMAIL} --dns-route53 -d local.test.ksp-ckan.space --test-cert
    environment:
      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
    volumes:
      - certbot:/etc/letsencrypt
  nginx:
    build:
      context: nginx/.
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - certbot:/etc/letsencrypt
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf
  clean:
    build:
      context: netkan/.
      target: dev
    volumes:
      - ./netkan:/home/netkan/netkan
      - ${HOME}/ckan_cache:/home/netkan/ckan_cache
    command: clean-cache --days 1
  counts:
    build:
      context: netkan/.
      target: dev
    environment:
      SSH_KEY: ${CKAN_NETKAN_SSHKEY}
      NETKAN_REMOTE: ${NETKAN_METADATA_PATH}
      CKANMETA_REMOTE: ${CKAN_METADATA_PATH}
      GH_Token: ${CKAN_GH_Token}
      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
    volumes:
      - ./netkan:/home/netkan/netkan
    command: download-counter
  dev:
    build:
      context: netkan/.
      target: dev
    environment:
      SSH_KEY: ${CKAN_NETKAN_SSHKEY}
      NETKAN_REMOTE: ${NETKAN_METADATA_PATH}
      CKANMETA_REMOTE: ${CKAN_METADATA_PATH}
      GH_Token: ${CKAN_GH_Token}
      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}
      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}
    volumes:
      - ./netkan:/home/netkan/netkan
    entrypoint: sleep infinity
